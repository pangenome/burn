#!/bin/bash

# exit when any command fails
set -eo pipefail

# Set locale
LC_NUMERIC=en_US.UTF-8

source_gfa=$1
target_gfa=$2
min_depth=$3
max_depth=$4
ref_selector=$5
target_type=$6
threads=$7

prefix=$(basename "$source_gfa" .gfa)
target=$(basename "$target_gfa" .gfa)

echo "Build the graphs"
if [[ ! -s "$prefix".og ]]; then
  odgi build -g "$prefix".gfa -o "$prefix".og -t $threads -P
fi

if [[ ! -s "$target".og ]]; then
  odgi build -g "$target".gfa -o "$target".og -t $threads -P
fi

echo "Take all path names"
if [[ ! -s "$prefix".all_path_names.txt ]]; then
  odgi paths -i "$prefix".og -L >"$prefix".all_path_names.txt
fi

echo "Take consensus path names"
if [[ ! -s "$prefix".consensus_path_names.txt ]]; then
  grep ^Cons "$prefix".all_path_names.txt >"$prefix".consensus_path_names.txt
fi

echo "Take original path names"
if [[ ! -s "$prefix".original_path_names.txt ]]; then
  grep ^Cons -v "$prefix".all_path_names.txt >"$prefix".original_path_names.txt
fi

echo "Calculate the depth"
if [[ ! -s "$prefix".consensus_path_names.depth.tsv ]]; then
  odgi depth -i "$prefix".og -s "$prefix".original_path_names.txt -R "$prefix".consensus_path_names.txt -t $threads >"$prefix".consensus_path_names.depth.tsv
fi

echo "Remove artifacts and dark matter"
awk '$4 >= '"$min_depth"' && $4 <= '"$max_depth"'' "$prefix".consensus_path_names.depth.tsv >"$prefix".consensus_path_names.depth."$min_depth"_"$max_depth".tsv

echo "Take the paths touched by the references"
odgi overlap -i "$prefix".og -s "$prefix".consensus_path_names.txt -b <(grep "$ref_selector" "$prefix".original_path_names.txt) -t $threads | cut -f 4 >"$prefix".consensus_path_names.touched.txt

echo "Take the link paths between consensus paths that we're saving"
if [[ ! -s "$target".path_names.txt ]]; then
  odgi paths -i "$target".og -L >"$target".path_names.txt
fi

if [[ $target_type == "consensus" ]]; then
  grep ^Link "$target".path_names.txt | awk '{ print NR":"$0 }' |
    grep -f <(
      cat "$prefix".consensus_path_names.touched.txt
      grep ^Link "$target".path_names.txt | grep -n -o -Ff <(cut -f 1 "$prefix".consensus_path_names.depth."$min_depth"_"$max_depth".tsv) |
      cut -f 1 -d : | sort -n | uniq -c | awk '$1 == 2 { print "^"$2":"} '
    ) | cut -f 2 -d : >"$target".link_paths.to_extract.txt
elif [[ $target_type == "full" ]]; then
  grep "$ref_selector" "$prefix".original_path_names.txt >"$target".link_paths.to_extract.txt
fi

echo "Put it all together"
cat <(cut -f 1 "$prefix".consensus_path_names.depth."$min_depth"_"$max_depth".tsv) \
  "$target".link_paths.to_extract.txt \
  "$prefix".consensus_path_names.touched.txt |
  sort | uniq | awk 'NF > 0' >"$prefix".consensus_path_names.to_extract.txt

echo "Extract"
if [[ $target_type == "consensus" ]]; then
  if [[ ! -s "$target".chop100.og ]]; then
    odgi chop -i "$target".og -o "$target".chop100.og -c 100 -t $threads
  fi
  odgi extract -i "$target".chop100.og -b "$prefix".consensus_path_names.to_extract.txt -c 1 -t $threads -o - | odgi unchop -i - -o "$target".burned.og
elif [[ $target_type == "full" ]]; then
  odgi extract -i "$target".og -b "$prefix".consensus_path_names.to_extract.txt -c 1 -t $threads -o "$target".burned.og
fi

echo "Get the GFA for Bandage"
odgi view -i "$target".burned.og -g >"$target".burned.gfa

#echo "Bandage"
#Bandage image "$prefix".consensus@10000__y_0_1000000.burned.gfa "$prefix".consensus@10000__y_0_1000000.burned.Bandage.h2000nw500linear.png --height 2000 --nodewidth 500 --linear

echo "Explode the burned target"
rm -rf bomb
mkdir bomb
odgi explode -i "$target".burned.og -p bomb/burned -t $threads
ls -rthl bomb
